{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VEDANTH\\\\Desktop\\\\react\\\\food order\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport Mealitem from './MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-order-28ada-default-rtdb.firebaseio.com/meals.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(Error => {\n      //catches thrown error\n      setIsLoading(false);\n      setHttpError(Error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoad,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.errorLoad,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(Mealitem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 45\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableMeals, \"R1PPpzoFZmJs6XJp0led48b0o+s=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","Mealitem","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","message","className","mealsLoad","children","fileName","_jsxFileName","lineNumber","columnNumber","errorLoad","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/VEDANTH/Desktop/react/food order/src/Components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from './AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport Mealitem from './MealItem';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nconst AvailableMeals=() =>{\r\nconst [meals,setMeals]= useState([]);\r\n\r\nconst[ isLoading, setIsLoading]= useState(true);\r\n\r\nconst [httpError,setHttpError]= useState();\r\n\r\n  useEffect(()=>{\r\n    const fetchMeals= async ()=>{\r\n      const response=await fetch('https://food-order-28ada-default-rtdb.firebaseio.com/meals.json');\r\n\r\n      if(!response.ok){\r\n        throw new Error('Something went wrong!');\r\n      }\r\n      const responseData=await response.json();\r\n      \r\n      const loadedMeals=[];\r\n\r\n      for(const key in responseData){\r\n        loadedMeals.push({\r\n          id:key,\r\n          name:responseData[key].name,\r\n          description:responseData[key].description,\r\n          price:responseData[key].price,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n\r\n    };\r\n  fetchMeals().catch((Error)=>{    //catches thrown error\r\n    setIsLoading(false);\r\n    setHttpError(Error.message);\r\n\r\n  });\r\n    },[]);\r\n     if(isLoading){\r\n      return(\r\n        <section className={classes.mealsLoad}>\r\n          <p>Loading...</p>\r\n        </section>\r\n      );\r\n     }\r\n\r\n     if(httpError){\r\n      return(\r\n        <section className={classes.errorLoad}>\r\n          <p>{httpError}</p>\r\n        </section>\r\n      )\r\n     }\r\n  \r\n            const mealsList=meals.map(meal=><Mealitem id={meal.id} key={meal.id} name={meal.name} description={meal.description} price={meal.price}/>);\r\n    return (\r\n        <section className={classes.meals}>\r\n           <Card><ul>\r\n                {mealsList}\r\n            </ul>\r\n            </Card> \r\n        </section>\r\n    );\r\n\r\n};\r\nexport default AvailableMeals;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}